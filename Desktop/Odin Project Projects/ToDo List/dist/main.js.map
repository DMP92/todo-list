{"version":3,"sources":["webpack://todo-list/./src/DOM.js","webpack://todo-list/./src/Factory.js","webpack://todo-list/./src/index.js","webpack://todo-list/webpack/bootstrap","webpack://todo-list/webpack/runtime/define property getters","webpack://todo-list/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list/webpack/runtime/make namespace object","webpack://todo-list/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;;AAEsB;;;;;;;;;;;;;;;;;ACtKa;AACJ;AAC/B;;AAEA;;AAEA;AACA;AACA;AACA,oBAAoB,mDAAiB;AACrC,qBAAqB,mDAAiB;AACtC,oBAAoB,kDAAgB;AACpC,uBAAuB,qDAAmB;;AAE1C;AACA;;AAEA;AACA,QAAQ,qDAAiB;AACzB;;AAEA,YAAY;AACZ;;;;;;;;;;;;;;;;;ACtBwC;;AAExC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED,gBAAgB,qDAAW;AAC3B;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;UCrGD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;UCNA;UACA;UACA;UACA","file":"main.js","sourcesContent":["\nconst generalTask = (function() {\n    \n    \n    // upon click will get task  item\n    function toDoInput(task) {\n        const input = document.querySelector('.task');\n        \n        return input.value;\n    }\n\n    // on click will get notes of todo list item\n    function itemNotes(text) {\n        const notes = document.querySelector('.notes');\n        console.log('sup');\n        return notes.value;\n    }\n\n    // on click will get completion date\n    function date(date) {\n        const itemDate = document.querySelector('.date');\n\n        return itemDate.value;\n    }\n\n    function project(title) {\n        const projectTitle = document.querySelector('.project');\n\n        \n        return projectTitle.value;\n    }\n\n\n    function sendItemData() {\n        toDoInput();\n        itemNotes();\n        date();\n        project();\n\n    }\n\n    return {\n        title: toDoInput,\n        notes: itemNotes,\n        date: date,\n        project: project,\n        send: sendItemData\n    }\n})()\n\n\n// Module that prints each task item to UI\nconst taskPrint = (function() {\n\n    // // prints task panel container\n    // const taskPanel = document.querySelector('.taskPanel');\n    \n\n    //     function _printTaskContainer() {\n    //         const taskItem = document.createElement('div');\n    //         taskItem.classList.add('taskItem');\n    //         taskPanel.appendChild(taskItem);\n    //     }\n\n    // const taskItem = document.querySelectorAll('.taskItem');\n\n    \n    function printTask() {\n        const taskPanel = document.querySelector('.taskPanel');\n        const item = document.createElement('div');\n            item.classList.add('taskItem');\n            taskPanel.appendChild(item);\n        _printProjectName(item);\n        _printButtons(item);\n        _printTaskName(item);\n        _printTaskDate(item);\n        _printDescription(item);\n    }\n\n    // prints the name of the project\n   \n\n        function _printProjectName(item) {\n            const projectName = document.createElement('div');\n            projectName.classList.add('projectName');\n\n            projectName.textContent = generalTask.project();\n            if(projectName.textContent === '') {\n                projectName.textContent = 'Project Name: None';\n                item.appendChild(projectName);\n            } else {\n                item.appendChild(projectName);\n            }\n        }\n\n    // prints the buttons (delete, complete, edit)\n    \n\n        function _printButtons(item) {\n            const itemDelete = document.createElement('button');\n        itemDelete.classList.add('itemDelete');\n        itemDelete.textContent = 'D';\n\n    const completeTask = document.createElement('button');\n        completeTask.classList.add('completeTask');\n        completeTask.textContent = 'C';\n\n    const editTask = document.createElement('button');\n        editTask.classList.add('editTask');\n        editTask.textContent = 'E';\n\n            console.log('3 buttons');\n            item.appendChild(itemDelete);\n            item.appendChild(completeTask);\n            item.appendChild(editTask);\n        }\n\n    // prints name of task\n   \n\n\n        function _printTaskName(item) {\n            const taskName = document.createElement('div');\n            taskName.classList.add('taskName');\n\n            console.log('4 name');\n            taskName.textContent = generalTask.title();\n            item.appendChild(taskName);\n        }\n    \n    // prints task date\n    \n\n\n        function _printTaskDate(item) {\n            const taskDate = document.createElement('div');\n            taskDate.classList.add('taskDate');\n\n            console.log('5 date');\n            taskDate.textContent = generalTask.date();\n            item.appendChild(taskDate);\n        }\n\n    // prints description / notes for task\n    \n\n            function _printDescription(item) {\n                const description = document.createElement('div');\n                description.classList.add('description');\n\n                console.log('6 description');\n                description.textContent = generalTask.notes();\n                item.appendChild(description);\n            }\n\n    \n\n    return {\n        print: printTask\n    }\n\n})();\n\nconst submit = document.querySelector('.submit');\nsubmit.addEventListener('click', taskPrint.print);\n\nexport { generalTask }\n","import { generalTask } from \"./DOM\"\nimport {itemRef} from \"./index\"\n// Module that creates each item in the to-do list\n\nconst ItemFactory = (task, notes, date, title) => {\n\n    // create new item factory\n    function createGeneralItem(task, notes, date, title) {\n        const item = {};\n        item.task = generalTask.title(task);\n        item.notes = generalTask.notes(notes);\n        item.date = generalTask.date(date);\n        item.project = generalTask.project(title);\n        \n        _pushItem(item);\n    }\n\n    function _pushItem(item) {\n        itemRef.printItem(item);\n    }\n   \n    return { createGeneralItem }\n}\n\nexport {ItemFactory}","import { ItemFactory } from \"./Factory\";\n\n// This module will be used as the reference interface. It has an array of all todo list items, and \n// functions that break each list item down into its individual peices which can then be accessed as needed\n\nconst itemRef = (function() {\n\n    // array of each task in the list shared by the factory function that made them\n    const itemArray = [];\n\n        // pushes todo item into Item array\n        function pushItem(item) {\n            itemArray.push(item);\n            projectCreate.fetch(item);\n        }\n        \n        // shares specific itemArray\n        function shareArray() {\n            console.log(itemArray);\n            return itemArray;\n        }\n\n    // shares specific item\n    function shareTask(index) {\n        return itemArray[index];\n    }\n\n        // shares specific item name\n        function shareName(index) {\n            return itemArray[index].name;\n        }\n\n        // shares specific item notes\n        function shareNote(index) {\n            return itemArray[index].notes;\n        }\n\n        // shares specific item date\n        function shareSummary(index) {\n            return itemArray[index].date;\n        }\n\n        // shows which project the item belongs to\n        function shareProject(index) {\n           return itemArray[index].project;\n        }\n\n    return {\n        printItem : pushItem,\n        title: shareName,\n        notes: shareNote,\n        summary: shareSummary,\n        notes: shareProject,\n        task: shareTask,\n        share: shareArray\n    }\n})();\n\n// module for creating projects\nconst projectCreate = (function() {\n\n    // array that contains each project\n    const projectArray = [];\n\n    // function that gathers data about each item\n    function fetchItems(item) {\n        const project = {  };\n        project.task = item.task;\n        project.notes = item.notes;\n        project.date = item.date;\n        project.name = item.project;\n\n        projectArray.push(project);\n    }\n\n    // function that shares projectArray\n    function shareProjectArray() {\n        return projectArray;\n    }\n\n    // creates project container for all sub tasks\n    function createProject(item) {\n\n        return item.name;\n\n    }\n\n    return {\n        fetch: fetchItems,\n        shareArray: shareProjectArray,\n        create: createProject\n    }\n})();\n\nconst newItem = ItemFactory();\nconst button = document.querySelector('.submit');\nbutton.addEventListener('click', newItem.createGeneralItem);\n\nconst arrayprint = document.querySelector('.formDelete');\narrayprint.addEventListener('click', () => {\n    console.log(itemRef.shareArray);\n})\n\nexport { itemRef }","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.js\");\n"],"sourceRoot":""}